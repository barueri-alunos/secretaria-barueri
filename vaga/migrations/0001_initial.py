# Generated by Django 2.2.9 on 2020-02-07 14:32

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('usuarios', '0004_acessibilidade_pessoa_fisica'),
    ]

    operations = [
        migrations.CreateModel(
            name='Vaga',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo_vaga', models.CharField(max_length=255, verbose_name='Título da vaga')),
                ('responsavel_vaga', models.CharField(max_length=255, verbose_name='Responsável pela vaga')),
                ('contato_secretaria', models.CharField(max_length=255, verbose_name='Contato da Secretaria')),
                ('area_vaga', models.CharField(max_length=255, verbose_name='Área da vaga')),
                ('telefone', models.CharField(max_length=16, verbose_name='Telefone')),
                ('quantidade_vagas', models.IntegerField(verbose_name='Quantidade de Vagas')),
                ('salario', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Salário')),
                ('dias_trabalho', models.CharField(max_length=100)),
                ('horario_inicio', models.TimeField(verbose_name='Horário de início')),
                ('horario_final', models.TimeField(verbose_name='Horário de término')),
                ('beneficios', models.CharField(max_length=255, verbose_name='Quais os benefícios')),
                ('escolaridade', models.CharField(choices=[('EFI', 'Ensino fundamental incompleto'), ('CEF', 'Cursando ensino fundamental'), ('EFC', 'Ensino fundamental completo'), ('EMI', 'Ensino médio incompleto'), ('CEM', 'Cursando ensino médio'), ('EMC', 'Ensino médio completo'), ('ESI', 'Ensino superior incompleto'), ('CES', 'Cursando ensino superior'), ('ESC', 'Ensino superior completo'), ('CT', 'Curso tecnico'), ('PGI', 'Pós graduação incompleto'), ('CPG', 'Cursando pós graduação'), ('PGC', 'Pós graduação complea')], max_length=6, verbose_name='Escolaridade mínima')),
                ('data_abertura', models.DateField(verbose_name='Data de abertura da vaga')),
                ('detalhes', models.TextField(verbose_name='Detalhes sobre a vaga')),
                ('ativo', models.BooleanField(default=True)),
                ('criado_em', models.DateField(default=django.utils.timezone.now, verbose_name='Criado em')),
                ('empresa', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='usuarios.PessoaJuridica')),
            ],
        ),
        migrations.CreateModel(
            name='Detalhes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conhecimento_tecnico', models.CharField(max_length=255, verbose_name='Conhecimentos técnicos')),
                ('conhecimento_informatica', models.CharField(max_length=100, verbose_name='Conhecimento em informatica')),
                ('carregar_peso', models.BooleanField(choices=[('', ''), (True, 'Sim'), (False, 'Não')], default=False, verbose_name='Carregará peso ?')),
                ('peso', models.CharField(max_length=128, verbose_name='Quantos kgs em média?')),
                ('uso_escada', models.BooleanField(choices=[('', ''), (True, 'Sim'), (False, 'Não')], default=False, verbose_name='Fará uso constante da escada ?')),
                ('uso_elevador', models.BooleanField(choices=[('', ''), (True, 'Sim'), (False, 'Não')], default=False, verbose_name='Há elevador ou acessibilidade para modalidade ?')),
                ('tipo_atendimento', models.BooleanField(choices=[('', ''), (True, 'Sim'), (False, 'Não')], default=False, verbose_name='Há necessidade de atendimento ao público/cliente ? ')),
                ('postura_principal', models.CharField(choices=[('', ''), ('EP', 'Em pé'), ('SENTADO', 'Sentado'), ('DC', 'Deslocamento constante'), ('OUTRA', 'outra')], default=False, max_length=255, verbose_name='Qual forma de comunicação principal ?')),
                ('decisoes_complexas', models.BooleanField(choices=[('', ''), (True, 'Sim'), (False, 'Não')], default=False, verbose_name='Atividade exige concentração e tomadas de decisões complexas ?')),
                ('uso_ferramentas', models.CharField(max_length=255, verbose_name='Quais ferramentas ou equipamentos serão utilizados na atividade?')),
                ('uso_epi', models.CharField(max_length=255, verbose_name='Fará uso de EPI (Equipamento de Proteção Individual: Bota, protetor auricular, óculos de proteção, ect)? Quais ?')),
                ('acessibilidades', models.CharField(max_length=255, verbose_name='Quais recursos de acessibilidade empresa dispõe?')),
                ('adaptacoes', models.CharField(max_length=255, verbose_name='Há necessidade de apoio para adaptações para acessibilidade?')),
                ('data_entrevista', models.DateField(default=datetime.date.today, verbose_name='Data Prevista')),
                ('local_entrevista', models.CharField(max_length=255, verbose_name='Local da Entrevista')),
                ('termino_selecao', models.CharField(max_length=255, verbose_name='Previsão de término do processo seletivo')),
                ('posicao', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Vagas', to='vaga.Vaga')),
            ],
        ),
    ]
